import React, { useEffect, useState } from "react";
import MovieCard from "./MovieCard";
import "./HomePage.css";

const HomePage = () => {
  const [movies, setMovies] = useState<any[]>([]);
  const [favorites, setFavorites] = useState<number[]>([]);
  const [loading, setLoading] = useState(true);
  const [visitorCount] = useState(() => Math.floor(Math.random() * 50000) + 10000);

  useEffect(() => {
    fetch("http://localhost:8080/api/tmdb/clean-fetch")
      .then((res) => res.json())
      .then((data) => {
        setMovies(data);
        setLoading(false);

        const stored = JSON.parse(localStorage.getItem("favorites") || "[]");
        setFavorites(stored);
      })
      .catch((err) => {
        console.error("Failed to fetch movies:", err);
        setLoading(false);
      });
  }, []);

  const toggleFavorite = (id: number) => {
    let updated = [...favorites];
    if (favorites.includes(id)) {
      updated = updated.filter((favId) => favId !== id);
    } else {
      updated.push(id);
    }
    setFavorites(updated);
    localStorage.setItem("favorites", JSON.stringify(updated));
  };

  const randomMessages = [
    "üö® FBI WANTS TO KNOW YOUR LOCATION üö®",
    "‚ö†Ô∏è Your ISP has been notified ‚ö†Ô∏è",
    "üé¨ FRESH RIPS DAILY üé¨",
    "üíÄ DOWNLOAD AT YOUR OWN RISK üíÄ",
    "üî• QUALITY NOT GUARANTEED üî•",
    "üëÅÔ∏è SOMEONE IS WATCHING üëÅÔ∏è"
  ];

  const [currentMessage, setCurrentMessage] = useState(randomMessages[0]);

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentMessage(randomMessages[Math.floor(Math.random() * randomMessages.length)]);
    }, 3000);
    return () => clearInterval(interval);
  }, []);

  return (
    <div className="homepage">
      <div className="warning-banner">
        <div className="scrolling-text">
          {currentMessage} ‚Ä¢ VISITOR #{visitorCount.toLocaleString()} ‚Ä¢ LAST RAID: 3 DAYS AGO ‚Ä¢ 
        </div>
      </div>
      
      <div className="header-section">
        <h1 className="glitch" data-text="üïäÔ∏è PIGEON FLIX UNDERGROUND üïäÔ∏è">
          üïäÔ∏è PIGEON FLIX UNDERGROUND üïäÔ∏è
        </h1>
        <div className="subtitle">
          <span className="blink">‚óè</span> TOTALLY LEGAL MOVIE ARCHIVE <span className="blink">‚óè</span>
        </div>
        <div className="stats-bar">
          <span>ONLINE: {Math.floor(Math.random() * 500) + 100}</span>
          <span>SEEDS: {Math.floor(Math.random() * 1000) + 500}</span>
          <span>RATIO: {(Math.random() * 2 + 0.5).toFixed(2)}</span>
        </div>
      </div>

      <div className="content-wrapper">
        {loading ? (
          <div className="loading-screen">
            <div className="loading-text">
              <span>LOADING FORBIDDEN CONTENT</span>
              <div className="loading-dots">
                <span>.</span><span>.</span><span>.</span>
              </div>
            </div>
            <div className="progress-bar">
              <div className="progress-fill"></div>
            </div>
          </div>
        ) : (
          <>
            <div className="disclaimer">
              <marquee behavior="scroll" direction="left" scrollamount="3">
                ‚ö†Ô∏è DISCLAIMER: We are not responsible for any legal consequences ‚ö†Ô∏è 
                Use VPN ‚ö†Ô∏è Clear your browser history ‚ö†Ô∏è Don't tell anyone about this site ‚ö†Ô∏è
              </marquee>
            </div>
            
            <div className="movie-grid">
              {movies.map((movie) => (
                <MovieCard
                  key={movie.id}
                  movie={{
                    id: movie.id,
                    title: movie.title,
                    overview: movie.overview,
                    posterPath: `https://image.tmdb.org/t/p/w200${movie.posterPath}`,
                  }}
                  onFavoriteToggle={toggleFavorite}
                  isFavorited={favorites.includes(movie.id)}
                />
              ))}
            </div>
          </>
        )}
      </div>
    </div>
  );
};

export default HomePage;